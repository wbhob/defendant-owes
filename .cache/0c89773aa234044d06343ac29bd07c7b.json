{"dependencies":[{"name":"./year","loc":{"line":1,"column":27}},{"name":"../create/local","loc":{"line":2,"column":28}},{"name":"../create/date-from-array","loc":{"line":3,"column":30}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dayOfYearFromWeeks = dayOfYearFromWeeks;\nexports.weekOfYear = weekOfYear;\nexports.weeksInYear = weeksInYear;\n\nvar _year = require(\"./year\");\n\nvar _local = require(\"../create/local\");\n\nvar _dateFromArray = require(\"../create/date-from-array\");\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n  var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  fwd = 7 + dow - doy,\n\n  // first-week day local weekday -- which local weekday is fwd\n  fwdlw = (7 + (0, _dateFromArray.createUTCDate)(year, 0, fwd).getUTCDay() - dow) % 7;\n\n  return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear,\n      resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = (0, _year.daysInYear)(resYear) + dayOfYear;\n  } else if (dayOfYear > (0, _year.daysInYear)(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - (0, _year.daysInYear)(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n  var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek,\n      resYear;\n\n  if (week < 1) {\n    resYear = mom.year() - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(mom.year(), dow, doy)) {\n    resWeek = week - weeksInYear(mom.year(), dow, doy);\n    resYear = mom.year() + 1;\n  } else {\n    resYear = mom.year();\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nfunction weeksInYear(year, dow, doy) {\n  var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return ((0, _year.daysInYear)(year) - weekOffset + weekOffsetNext) / 7;\n}"},"hash":"68acb72a9281820889eb7b011b8749a0"}