{"dependencies":[{"name":"./bubble","loc":{"line":1,"column":43}},{"name":"../units/aliases","loc":{"line":2,"column":31}},{"name":"../utils/to-int","loc":{"line":3,"column":18}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asYears = exports.asMonths = exports.asWeeks = exports.asDays = exports.asHours = exports.asMinutes = exports.asSeconds = exports.asMilliseconds = undefined;\nexports.as = as;\nexports.valueOf = valueOf;\n\nvar _bubble = require(\"./bubble\");\n\nvar _aliases = require(\"../units/aliases\");\n\nvar _toInt = require(\"../utils/to-int\");\n\nvar _toInt2 = _interopRequireDefault(_toInt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction as(units) {\n  if (!this.isValid()) {\n    return NaN;\n  }\n  var days;\n  var months;\n  var milliseconds = this._milliseconds;\n\n  units = (0, _aliases.normalizeUnits)(units);\n\n  if (units === 'month' || units === 'year') {\n    days = this._days + milliseconds / 864e5;\n    months = this._months + (0, _bubble.daysToMonths)(days);\n    return units === 'month' ? months : months / 12;\n  } else {\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round((0, _bubble.monthsToDays)(this._months));\n    switch (units) {\n      case 'week':\n        return days / 7 + milliseconds / 6048e5;\n      case 'day':\n        return days + milliseconds / 864e5;\n      case 'hour':\n        return days * 24 + milliseconds / 36e5;\n      case 'minute':\n        return days * 1440 + milliseconds / 6e4;\n      case 'second':\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'millisecond':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error('Unknown unit ' + units);\n    }\n  }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf() {\n  if (!this.isValid()) {\n    return NaN;\n  }\n  return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + (0, _toInt2.default)(this._months / 12) * 31536e6;\n}\n\nfunction makeAs(alias) {\n  return function () {\n    return this.as(alias);\n  };\n}\n\nvar asMilliseconds = exports.asMilliseconds = makeAs('ms');\nvar asSeconds = exports.asSeconds = makeAs('s');\nvar asMinutes = exports.asMinutes = makeAs('m');\nvar asHours = exports.asHours = makeAs('h');\nvar asDays = exports.asDays = makeAs('d');\nvar asWeeks = exports.asWeeks = makeAs('w');\nvar asMonths = exports.asMonths = makeAs('M');\nvar asYears = exports.asYears = makeAs('y');"},"hash":"054ff6444c914eba8a3d8e1383db24e5"}