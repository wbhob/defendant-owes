{"dependencies":[{"name":"../format/format","loc":{"line":1,"column":31}},{"name":"../parse/regex","loc":{"line":2,"column":59}},{"name":"../parse/token","loc":{"line":3,"column":30}},{"name":"../utils/to-int","loc":{"line":4,"column":18}}],"generated":{"js":"\"use strict\";\n\nvar _format = require(\"../format/format\");\n\nvar _regex = require(\"../parse/regex\");\n\nvar _token = require(\"../parse/token\");\n\nvar _toInt = require(\"../utils/to-int\");\n\nvar _toInt2 = _interopRequireDefault(_toInt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// FORMATTING\n\n(0, _format.addFormatToken)('X', 0, 0, 'unix');\n(0, _format.addFormatToken)('x', 0, 0, 'valueOf');\n\n// PARSING\n\n(0, _regex.addRegexToken)('x', _regex.matchSigned);\n(0, _regex.addRegexToken)('X', _regex.matchTimestamp);\n(0, _token.addParseToken)('X', function (input, array, config) {\n  config._d = new Date(parseFloat(input, 10) * 1000);\n});\n(0, _token.addParseToken)('x', function (input, array, config) {\n  config._d = new Date((0, _toInt2.default)(input));\n});"},"hash":"7c2c40acce9ba11b882f5ed74e57260e"}