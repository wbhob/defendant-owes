{"dependencies":[{"name":"../create/local","loc":{"line":1,"column":28}},{"name":"../units/offset","loc":{"line":2,"column":32}},{"name":"../utils/is-function","loc":{"line":3,"column":23}},{"name":"../utils/hooks","loc":{"line":4,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCalendarFormat = getCalendarFormat;\nexports.calendar = calendar;\n\nvar _local = require(\"../create/local\");\n\nvar _offset = require(\"../units/offset\");\n\nvar _isFunction = require(\"../utils/is-function\");\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _hooks = require(\"../utils/hooks\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getCalendarFormat(myMoment, now) {\n  var diff = myMoment.diff(now, 'days', true);\n  return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar(time, formats) {\n  // We want to compare the start of today, vs this.\n  // Getting start-of-today depends on whether we're local/utc/offset or not.\n  var now = time || (0, _local.createLocal)(),\n      sod = (0, _offset.cloneWithOffset)(now, this).startOf('day'),\n      format = _hooks.hooks.calendarFormat(this, sod) || 'sameElse';\n\n  var output = formats && ((0, _isFunction2.default)(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n  return this.format(output || this.localeData().calendar(format, this, (0, _local.createLocal)(now)));\n}"},"hash":"7dabe7e7cb2de7040d34cf5199899315"}