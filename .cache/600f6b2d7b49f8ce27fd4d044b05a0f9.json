{"dependencies":[{"name":"./create","loc":{"line":1,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSetRelativeTimeRounding = getSetRelativeTimeRounding;\nexports.getSetRelativeTimeThreshold = getSetRelativeTimeThreshold;\nexports.humanize = humanize;\n\nvar _create = require(\"./create\");\n\nvar round = Math.round;\nvar thresholds = {\n  ss: 44, // a few seconds to seconds\n  s: 45, // seconds to minute\n  m: 45, // minutes to hour\n  h: 22, // hours to day\n  d: 26, // days to month\n  M: 11 // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  var duration = (0, _create.createDuration)(posNegDuration).abs();\n  var seconds = round(duration.as('s'));\n  var minutes = round(duration.as('m'));\n  var hours = round(duration.as('h'));\n  var days = round(duration.as('d'));\n  var months = round(duration.as('M'));\n  var years = round(duration.as('y'));\n\n  var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n\n  a[2] = withoutSuffix;\n  a[3] = +posNegDuration > 0;\n  a[4] = locale;\n  return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding(roundingFunction) {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof roundingFunction === 'function') {\n    round = roundingFunction;\n    return true;\n  }\n  return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n  return true;\n}\n\nfunction humanize(withSuffix) {\n  if (!this.isValid()) {\n    return this.localeData().invalidDate();\n  }\n\n  var locale = this.localeData();\n  var output = relativeTime(this, !withSuffix, locale);\n\n  if (withSuffix) {\n    output = locale.pastFuture(+this, output);\n  }\n\n  return locale.postformat(output);\n}"},"hash":"21c70253e241064e7743d337095bd8af"}