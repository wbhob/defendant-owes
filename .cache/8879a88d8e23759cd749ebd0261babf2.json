{"dependencies":[{"name":"../utils/is-array","loc":{"line":1,"column":20}},{"name":"../utils/is-object","loc":{"line":2,"column":21}},{"name":"../utils/is-object-empty","loc":{"line":3,"column":26}},{"name":"../utils/is-undefined","loc":{"line":4,"column":24}},{"name":"../utils/is-number","loc":{"line":5,"column":21}},{"name":"../utils/is-date","loc":{"line":6,"column":19}},{"name":"../utils/map","loc":{"line":7,"column":16}},{"name":"./valid","loc":{"line":13,"column":24}},{"name":"../moment/constructor","loc":{"line":9,"column":33}},{"name":"../locale/locales","loc":{"line":10,"column":26}},{"name":"../utils/hooks","loc":{"line":11,"column":22}},{"name":"./check-overflow","loc":{"line":12,"column":26}},{"name":"./from-string-and-array","loc":{"line":15,"column":42}},{"name":"./from-string-and-format","loc":{"line":16,"column":42}},{"name":"./from-string","loc":{"line":17,"column":42}},{"name":"./from-array","loc":{"line":18,"column":42}},{"name":"./from-object","loc":{"line":19,"column":42}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareConfig = prepareConfig;\nexports.createLocalOrUTC = createLocalOrUTC;\n\nvar _isArray = require(\"../utils/is-array\");\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isObject = require(\"../utils/is-object\");\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _isObjectEmpty = require(\"../utils/is-object-empty\");\n\nvar _isObjectEmpty2 = _interopRequireDefault(_isObjectEmpty);\n\nvar _isUndefined = require(\"../utils/is-undefined\");\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isNumber = require(\"../utils/is-number\");\n\nvar _isNumber2 = _interopRequireDefault(_isNumber);\n\nvar _isDate = require(\"../utils/is-date\");\n\nvar _isDate2 = _interopRequireDefault(_isDate);\n\nvar _map = require(\"../utils/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _valid = require(\"./valid\");\n\nvar _constructor = require(\"../moment/constructor\");\n\nvar _locales = require(\"../locale/locales\");\n\nvar _hooks = require(\"../utils/hooks\");\n\nvar _checkOverflow = require(\"./check-overflow\");\n\nvar _checkOverflow2 = _interopRequireDefault(_checkOverflow);\n\nvar _fromStringAndArray = require(\"./from-string-and-array\");\n\nvar _fromStringAndFormat = require(\"./from-string-and-format\");\n\nvar _fromString = require(\"./from-string\");\n\nvar _fromArray = require(\"./from-array\");\n\nvar _fromObject = require(\"./from-object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createFromConfig(config) {\n  var res = new _constructor.Moment((0, _checkOverflow2.default)(prepareConfig(config)));\n  if (res._nextDay) {\n    // Adding is smart enough around DST\n    res.add(1, 'd');\n    res._nextDay = undefined;\n  }\n\n  return res;\n}\n\nfunction prepareConfig(config) {\n  var input = config._i,\n      format = config._f;\n\n  config._locale = config._locale || (0, _locales.getLocale)(config._l);\n\n  if (input === null || format === undefined && input === '') {\n    return (0, _valid.createInvalid)({ nullInput: true });\n  }\n\n  if (typeof input === 'string') {\n    config._i = input = config._locale.preparse(input);\n  }\n\n  if ((0, _constructor.isMoment)(input)) {\n    return new _constructor.Moment((0, _checkOverflow2.default)(input));\n  } else if ((0, _isDate2.default)(input)) {\n    config._d = input;\n  } else if ((0, _isArray2.default)(format)) {\n    (0, _fromStringAndArray.configFromStringAndArray)(config);\n  } else if (format) {\n    (0, _fromStringAndFormat.configFromStringAndFormat)(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!(0, _valid.isValid)(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config) {\n  var input = config._i;\n  if ((0, _isUndefined2.default)(input)) {\n    config._d = new Date(_hooks.hooks.now());\n  } else if ((0, _isDate2.default)(input)) {\n    config._d = new Date(input.valueOf());\n  } else if (typeof input === 'string') {\n    (0, _fromString.configFromString)(config);\n  } else if ((0, _isArray2.default)(input)) {\n    config._a = (0, _map2.default)(input.slice(0), function (obj) {\n      return parseInt(obj, 10);\n    });\n    (0, _fromArray.configFromArray)(config);\n  } else if ((0, _isObject2.default)(input)) {\n    (0, _fromObject.configFromObject)(config);\n  } else if ((0, _isNumber2.default)(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    _hooks.hooks.createFromInputFallback(config);\n  }\n}\n\nfunction createLocalOrUTC(input, format, locale, strict, isUTC) {\n  var c = {};\n\n  if (locale === true || locale === false) {\n    strict = locale;\n    locale = undefined;\n  }\n\n  if ((0, _isObject2.default)(input) && (0, _isObjectEmpty2.default)(input) || (0, _isArray2.default)(input) && input.length === 0) {\n    input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  c._isAMomentObject = true;\n  c._useUTC = c._isUTC = isUTC;\n  c._l = locale;\n  c._i = input;\n  c._f = format;\n  c._strict = strict;\n\n  return createFromConfig(c);\n}"},"hash":"95bc34da4d7279e2dd94acc6481d0b28"}