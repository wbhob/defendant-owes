{"dependencies":[{"name":"../utils/zero-fill","loc":{"line":1,"column":21}},{"name":"../utils/is-function","loc":{"line":2,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTokenFunctions = exports.formattingTokens = undefined;\nexports.addFormatToken = addFormatToken;\nexports.formatMoment = formatMoment;\nexports.expandFormat = expandFormat;\n\nvar _zeroFill = require(\"../utils/zero-fill\");\n\nvar _zeroFill2 = _interopRequireDefault(_zeroFill);\n\nvar _isFunction = require(\"../utils/is-function\");\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar formattingTokens = exports.formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = exports.formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken(token, padded, ordinal, callback) {\n  var func = callback;\n  if (typeof callback === 'string') {\n    func = function () {\n      return this[callback]();\n    };\n  }\n  if (token) {\n    formatTokenFunctions[token] = func;\n  }\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function () {\n      return (0, _zeroFill2.default)(func.apply(this, arguments), padded[1], padded[2]);\n    };\n  }\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function () {\n      return this.localeData().ordinal(func.apply(this, arguments), token);\n    };\n  }\n}\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n  return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n  var array = format.match(formattingTokens),\n      i,\n      length;\n\n  for (i = 0, length = array.length; i < length; i++) {\n    if (formatTokenFunctions[array[i]]) {\n      array[i] = formatTokenFunctions[array[i]];\n    } else {\n      array[i] = removeFormattingTokens(array[i]);\n    }\n  }\n\n  return function (mom) {\n    var output = '',\n        i;\n    for (i = 0; i < length; i++) {\n      output += (0, _isFunction2.default)(array[i]) ? array[i].call(mom, format) : array[i];\n    }\n    return output;\n  };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n  if (!m.isValid()) {\n    return m.localeData().invalidDate();\n  }\n\n  format = expandFormat(format, m.localeData());\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n  return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n  var i = 5;\n\n  function replaceLongDateFormatTokens(input) {\n    return locale.longDateFormat(input) || input;\n  }\n\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}"},"hash":"ff8b05e8d865abbb13ad829aa32e3016"}