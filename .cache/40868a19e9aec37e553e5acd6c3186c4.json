{"dependencies":[{"name":"../utils/abs-floor","loc":{"line":1,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toISOString = toISOString;\n\nvar _absFloor = require(\"../utils/abs-floor\");\n\nvar _absFloor2 = _interopRequireDefault(_absFloor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar abs = Math.abs;\n\nfunction sign(x) {\n  return (x > 0) - (x < 0) || +x;\n}\n\nfunction toISOString() {\n  // for ISO strings we do not use the normal bubbling rules:\n  //  * milliseconds bubble up until they become hours\n  //  * days do not bubble at all\n  //  * months bubble up until they become years\n  // This is because there is no context-free conversion between hours and days\n  // (think of clock changes)\n  // and also not between days and months (28-31 days per month)\n  if (!this.isValid()) {\n    return this.localeData().invalidDate();\n  }\n\n  var seconds = abs(this._milliseconds) / 1000;\n  var days = abs(this._days);\n  var months = abs(this._months);\n  var minutes, hours, years;\n\n  // 3600 seconds -> 60 minutes -> 1 hour\n  minutes = (0, _absFloor2.default)(seconds / 60);\n  hours = (0, _absFloor2.default)(minutes / 60);\n  seconds %= 60;\n  minutes %= 60;\n\n  // 12 months -> 1 year\n  years = (0, _absFloor2.default)(months / 12);\n  months %= 12;\n\n  // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n  var Y = years;\n  var M = months;\n  var D = days;\n  var h = hours;\n  var m = minutes;\n  var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n  var total = this.asSeconds();\n\n  if (!total) {\n    // this is the same as C#'s (Noda) and python (isodate)...\n    // but not other JS (goog.date)\n    return 'P0D';\n  }\n\n  var totalSign = total < 0 ? '-' : '';\n  var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n  var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n  var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n  return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n}"},"hash":"217035c6f1043ba26481d3c23d1aa299"}