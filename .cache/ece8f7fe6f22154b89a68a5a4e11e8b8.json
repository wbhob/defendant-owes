{"dependencies":[{"name":"../utils/hooks","loc":{"line":1,"column":22}},{"name":"../utils/has-own-prop","loc":{"line":2,"column":23}},{"name":"../utils/is-undefined","loc":{"line":3,"column":24}},{"name":"../create/parsing-flags","loc":{"line":4,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyConfig = copyConfig;\nexports.Moment = Moment;\nexports.isMoment = isMoment;\n\nvar _hooks = require(\"../utils/hooks\");\n\nvar _hasOwnProp = require(\"../utils/has-own-prop\");\n\nvar _hasOwnProp2 = _interopRequireDefault(_hasOwnProp);\n\nvar _isUndefined = require(\"../utils/is-undefined\");\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _parsingFlags = require(\"../create/parsing-flags\");\n\nvar _parsingFlags2 = _interopRequireDefault(_parsingFlags);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = _hooks.hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n  var i, prop, val;\n\n  if (!(0, _isUndefined2.default)(from._isAMomentObject)) {\n    to._isAMomentObject = from._isAMomentObject;\n  }\n  if (!(0, _isUndefined2.default)(from._i)) {\n    to._i = from._i;\n  }\n  if (!(0, _isUndefined2.default)(from._f)) {\n    to._f = from._f;\n  }\n  if (!(0, _isUndefined2.default)(from._l)) {\n    to._l = from._l;\n  }\n  if (!(0, _isUndefined2.default)(from._strict)) {\n    to._strict = from._strict;\n  }\n  if (!(0, _isUndefined2.default)(from._tzm)) {\n    to._tzm = from._tzm;\n  }\n  if (!(0, _isUndefined2.default)(from._isUTC)) {\n    to._isUTC = from._isUTC;\n  }\n  if (!(0, _isUndefined2.default)(from._offset)) {\n    to._offset = from._offset;\n  }\n  if (!(0, _isUndefined2.default)(from._pf)) {\n    to._pf = (0, _parsingFlags2.default)(from);\n  }\n  if (!(0, _isUndefined2.default)(from._locale)) {\n    to._locale = from._locale;\n  }\n\n  if (momentProperties.length > 0) {\n    for (i = 0; i < momentProperties.length; i++) {\n      prop = momentProperties[i];\n      val = from[prop];\n      if (!(0, _isUndefined2.default)(val)) {\n        to[prop] = val;\n      }\n    }\n  }\n\n  return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n  copyConfig(this, config);\n  this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n  if (!this.isValid()) {\n    this._d = new Date(NaN);\n  }\n  // Prevent infinite loop in case updateOffset creates new moment\n  // objects.\n  if (updateInProgress === false) {\n    updateInProgress = true;\n    _hooks.hooks.updateOffset(this);\n    updateInProgress = false;\n  }\n}\n\nfunction isMoment(obj) {\n  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n}"},"hash":"c272b8450942a67a9ea5956427cac36e"}