{"dependencies":[{"name":"../moment/get-set","loc":{"line":1,"column":27}},{"name":"../format/format","loc":{"line":2,"column":31}},{"name":"./aliases","loc":{"line":3,"column":29}},{"name":"./priorities","loc":{"line":4,"column":32}},{"name":"../parse/regex","loc":{"line":5,"column":71}},{"name":"../parse/token","loc":{"line":6,"column":30}},{"name":"./constants","loc":{"line":7,"column":37}},{"name":"../utils/to-int","loc":{"line":8,"column":18}},{"name":"../utils/zero-fill","loc":{"line":9,"column":21}},{"name":"../create/parsing-flags","loc":{"line":10,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSetHour = exports.defaultLocaleMeridiemParse = undefined;\nexports.localeIsPM = localeIsPM;\nexports.localeMeridiem = localeMeridiem;\n\nvar _getSet = require(\"../moment/get-set\");\n\nvar _format = require(\"../format/format\");\n\nvar _aliases = require(\"./aliases\");\n\nvar _priorities = require(\"./priorities\");\n\nvar _regex = require(\"../parse/regex\");\n\nvar _token = require(\"../parse/token\");\n\nvar _constants = require(\"./constants\");\n\nvar _toInt = require(\"../utils/to-int\");\n\nvar _toInt2 = _interopRequireDefault(_toInt);\n\nvar _zeroFill = require(\"../utils/zero-fill\");\n\nvar _zeroFill2 = _interopRequireDefault(_zeroFill);\n\nvar _parsingFlags = require(\"../create/parsing-flags\");\n\nvar _parsingFlags2 = _interopRequireDefault(_parsingFlags);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// FORMATTING\n\nfunction hFormat() {\n  return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n  return this.hours() || 24;\n}\n\n(0, _format.addFormatToken)('H', ['HH', 2], 0, 'hour');\n(0, _format.addFormatToken)('h', ['hh', 2], 0, hFormat);\n(0, _format.addFormatToken)('k', ['kk', 2], 0, kFormat);\n\n(0, _format.addFormatToken)('hmm', 0, 0, function () {\n  return '' + hFormat.apply(this) + (0, _zeroFill2.default)(this.minutes(), 2);\n});\n\n(0, _format.addFormatToken)('hmmss', 0, 0, function () {\n  return '' + hFormat.apply(this) + (0, _zeroFill2.default)(this.minutes(), 2) + (0, _zeroFill2.default)(this.seconds(), 2);\n});\n\n(0, _format.addFormatToken)('Hmm', 0, 0, function () {\n  return '' + this.hours() + (0, _zeroFill2.default)(this.minutes(), 2);\n});\n\n(0, _format.addFormatToken)('Hmmss', 0, 0, function () {\n  return '' + this.hours() + (0, _zeroFill2.default)(this.minutes(), 2) + (0, _zeroFill2.default)(this.seconds(), 2);\n});\n\nfunction meridiem(token, lowercase) {\n  (0, _format.addFormatToken)(token, 0, 0, function () {\n    return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n  });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\n(0, _aliases.addUnitAlias)('hour', 'h');\n\n// PRIORITY\n(0, _priorities.addUnitPriority)('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem(isStrict, locale) {\n  return locale._meridiemParse;\n}\n\n(0, _regex.addRegexToken)('a', matchMeridiem);\n(0, _regex.addRegexToken)('A', matchMeridiem);\n(0, _regex.addRegexToken)('H', _regex.match1to2);\n(0, _regex.addRegexToken)('h', _regex.match1to2);\n(0, _regex.addRegexToken)('k', _regex.match1to2);\n(0, _regex.addRegexToken)('HH', _regex.match1to2, _regex.match2);\n(0, _regex.addRegexToken)('hh', _regex.match1to2, _regex.match2);\n(0, _regex.addRegexToken)('kk', _regex.match1to2, _regex.match2);\n\n(0, _regex.addRegexToken)('hmm', _regex.match3to4);\n(0, _regex.addRegexToken)('hmmss', _regex.match5to6);\n(0, _regex.addRegexToken)('Hmm', _regex.match3to4);\n(0, _regex.addRegexToken)('Hmmss', _regex.match5to6);\n\n(0, _token.addParseToken)(['H', 'HH'], _constants.HOUR);\n(0, _token.addParseToken)(['k', 'kk'], function (input, array, config) {\n  var kInput = (0, _toInt2.default)(input);\n  array[_constants.HOUR] = kInput === 24 ? 0 : kInput;\n});\n(0, _token.addParseToken)(['a', 'A'], function (input, array, config) {\n  config._isPm = config._locale.isPM(input);\n  config._meridiem = input;\n});\n(0, _token.addParseToken)(['h', 'hh'], function (input, array, config) {\n  array[_constants.HOUR] = (0, _toInt2.default)(input);\n  (0, _parsingFlags2.default)(config).bigHour = true;\n});\n(0, _token.addParseToken)('hmm', function (input, array, config) {\n  var pos = input.length - 2;\n  array[_constants.HOUR] = (0, _toInt2.default)(input.substr(0, pos));\n  array[_constants.MINUTE] = (0, _toInt2.default)(input.substr(pos));\n  (0, _parsingFlags2.default)(config).bigHour = true;\n});\n(0, _token.addParseToken)('hmmss', function (input, array, config) {\n  var pos1 = input.length - 4;\n  var pos2 = input.length - 2;\n  array[_constants.HOUR] = (0, _toInt2.default)(input.substr(0, pos1));\n  array[_constants.MINUTE] = (0, _toInt2.default)(input.substr(pos1, 2));\n  array[_constants.SECOND] = (0, _toInt2.default)(input.substr(pos2));\n  (0, _parsingFlags2.default)(config).bigHour = true;\n});\n(0, _token.addParseToken)('Hmm', function (input, array, config) {\n  var pos = input.length - 2;\n  array[_constants.HOUR] = (0, _toInt2.default)(input.substr(0, pos));\n  array[_constants.MINUTE] = (0, _toInt2.default)(input.substr(pos));\n});\n(0, _token.addParseToken)('Hmmss', function (input, array, config) {\n  var pos1 = input.length - 4;\n  var pos2 = input.length - 2;\n  array[_constants.HOUR] = (0, _toInt2.default)(input.substr(0, pos1));\n  array[_constants.MINUTE] = (0, _toInt2.default)(input.substr(pos1, 2));\n  array[_constants.SECOND] = (0, _toInt2.default)(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM(input) {\n  // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n  // Using charAt should be more compatible.\n  return (input + '').toLowerCase().charAt(0) === 'p';\n}\n\nvar defaultLocaleMeridiemParse = exports.defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem(hours, minutes, isLower) {\n  if (hours > 11) {\n    return isLower ? 'pm' : 'PM';\n  } else {\n    return isLower ? 'am' : 'AM';\n  }\n}\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = exports.getSetHour = (0, _getSet.makeGetSet)('Hours', true);"},"hash":"49b4fdf321f8c125ac5b9e7d8f5a1f74"}